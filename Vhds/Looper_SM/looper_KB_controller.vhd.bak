--Looper keyboard Translator


library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;


entity LooperSM is
	port (

		--keyboard inputs
		ResetN : in std_logic;
		make, break : in std_logic;
		KBdata     : in std_logic_vector(7 downto 0)
		

		-- Outputs
		sel_channel: out std_logic_vector(1 downto 0); --4 channels
		RecOnMet : out std_logic;
		Rec_PLAY : out std_logic;
		STOP : out std_logic;
		

		
	);
end LooperSM;



architecture arc_LooperSM of LooperSM is

		signal arch_sel_channel:  std_logic_vector(1 downto 0); --4 channels
		signal arch_RecOnMet :  std_logic;
		signal arch_Rec_PLAY :  std_logic;
		signal arch_STOP :  std_logic;

begin
-- Synchronous Part
	process(ResetN,make,break,KBdata)
	begin
		if ResetN='0' then
					arch_sel_channel<= "00";
					arch_RecOnMet<='0';
					arch_Rec_PLAY <= '0';
					arch_STOP <='0';
			
		else
					
			case KBdata is
			
				when x"16"=> --"1" On keyboard
					signal arch_sel_channel:  std_logic_vector(1 downto 0);
					state<=transToRegularMode;
					
				when x"1E"=> --"2" On keyboard
					state<=channelControl;
					
				when x"26"=> --"3" On keyboard
				
					
				when x"25"=> --"4" On keyboard
					Qtmp<= "0011";
					state<=s4;
					
				when x"70"=> -- "0" On th keypad
					Qtmp<= "0100";
					state<=metChannelControl;
					
				when x"29"=>
					Qtmp<= "0111";
					state<=metChannelREC;
					state<=transToRegularMode;
					
				when x"7A"=>
					Qtmp<= "1000";
					state<=metChannelControl;
					
					
			end case;
				
		end if;
		
end process;

-- Asynchronous Part
		arch_sel_channel:  std_logic_vector(1 downto 0); --4 channels
		arch_RecOnMet :  std_logic;
		arch_Rec_PLAY :  std_logic;
		arch_STOP :  std_logic;

end arc_LooperSM; 