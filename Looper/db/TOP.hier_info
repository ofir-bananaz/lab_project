|Met_Top
DUTY20ms <= Metronome:inst.duty20ms
resetN => Metronome:inst.RESETN
resetN => KBD_MOD_met:inst2.RESET
CLK => Metronome:inst.CLK
CLK => KBD_MOD_met:inst2.CLK
KBD_CLK => KBD_MOD_met:inst2.KBD_CLK
KBD_DAT => KBD_MOD_met:inst2.KBD_DAT
resetCount => Metronome:inst.resetCount
Beat <= Metronome:inst.quater
4BeatBar <= Metronome:inst.barEND
newBPM <= Metronome:inst.newBPM
OnOffSWITCH <= KBD_MOD_met:inst2.on/off
HEX4[0] <= hexss:inst1.ss[0]
HEX4[1] <= hexss:inst1.ss[1]
HEX4[2] <= hexss:inst1.ss[2]
HEX4[3] <= hexss:inst1.ss[3]
HEX4[4] <= hexss:inst1.ss[4]
HEX4[5] <= hexss:inst1.ss[5]
HEX4[6] <= hexss:inst1.ss[6]
HEX5[0] <= hexss:inst3.ss[0]
HEX5[1] <= hexss:inst3.ss[1]
HEX5[2] <= hexss:inst3.ss[2]
HEX5[3] <= hexss:inst3.ss[3]
HEX5[4] <= hexss:inst3.ss[4]
HEX5[5] <= hexss:inst3.ss[5]
HEX5[6] <= hexss:inst3.ss[6]


|Met_Top|Metronome:inst
RESETN => arch_duty20ms.ACLR
RESETN => arch_newBPM.ACLR
RESETN => arch_dout.ACLR
RESETN => quaterCounter[0].ACLR
RESETN => quaterCounter[1].ACLR
RESETN => quaterCounter[2].ACLR
RESETN => counter[0].ACLR
RESETN => counter[1].ACLR
RESETN => counter[2].ACLR
RESETN => counter[3].ACLR
RESETN => counter[4].ACLR
RESETN => counter[5].ACLR
RESETN => counter[6].ACLR
RESETN => counter[7].ACLR
RESETN => counter[8].ACLR
RESETN => counter[9].ACLR
RESETN => counter[10].ACLR
RESETN => counter[11].ACLR
RESETN => counter[12].ACLR
RESETN => counter[13].ACLR
RESETN => counter[14].ACLR
RESETN => counter[15].ACLR
RESETN => counter[16].ACLR
RESETN => counter[17].ACLR
RESETN => counter[18].ACLR
RESETN => counter[19].ACLR
RESETN => counter[20].ACLR
RESETN => counter[21].ACLR
RESETN => counter[22].ACLR
RESETN => counter[23].ACLR
RESETN => counter[24].ACLR
RESETN => counter[25].ACLR
RESETN => counter[26].ACLR
RESETN => counter[27].ACLR
RESETN => counter[28].ACLR
RESETN => counter[29].ACLR
RESETN => counter[30].ACLR
RESETN => counter[31].ACLR
RESETN => BPMcurr[0].ACLR
RESETN => BPMcurr[1].ACLR
RESETN => BPMcurr[2].PRESET
RESETN => BPMcurr[3].PRESET
RESETN => BPMcurr[4].PRESET
RESETN => BPMcurr[5].PRESET
RESETN => BPMcurr[6].ACLR
RESETN => BPMcurr[7].ACLR
RESETN => arch_barEND.ENA
RESETN => counterLimit[31].ENA
RESETN => counterLimit[30].ENA
RESETN => counterLimit[29].ENA
RESETN => counterLimit[28].ENA
RESETN => counterLimit[27].ENA
RESETN => counterLimit[26].ENA
RESETN => counterLimit[25].ENA
RESETN => counterLimit[24].ENA
RESETN => counterLimit[23].ENA
RESETN => counterLimit[22].ENA
RESETN => counterLimit[21].ENA
RESETN => counterLimit[20].ENA
RESETN => counterLimit[19].ENA
RESETN => counterLimit[18].ENA
RESETN => counterLimit[17].ENA
RESETN => counterLimit[16].ENA
RESETN => counterLimit[15].ENA
RESETN => counterLimit[14].ENA
RESETN => counterLimit[13].ENA
RESETN => counterLimit[12].ENA
RESETN => counterLimit[11].ENA
RESETN => counterLimit[10].ENA
RESETN => counterLimit[9].ENA
RESETN => counterLimit[8].ENA
RESETN => counterLimit[7].ENA
RESETN => counterLimit[6].ENA
RESETN => counterLimit[5].ENA
RESETN => counterLimit[4].ENA
RESETN => counterLimit[3].ENA
RESETN => counterLimit[2].ENA
RESETN => counterLimit[1].ENA
RESETN => counterLimit[0].ENA
CLK => arch_barEND.CLK
CLK => arch_duty20ms.CLK
CLK => arch_newBPM.CLK
CLK => arch_dout.CLK
CLK => counterLimit[0].CLK
CLK => counterLimit[1].CLK
CLK => counterLimit[2].CLK
CLK => counterLimit[3].CLK
CLK => counterLimit[4].CLK
CLK => counterLimit[5].CLK
CLK => counterLimit[6].CLK
CLK => counterLimit[7].CLK
CLK => counterLimit[8].CLK
CLK => counterLimit[9].CLK
CLK => counterLimit[10].CLK
CLK => counterLimit[11].CLK
CLK => counterLimit[12].CLK
CLK => counterLimit[13].CLK
CLK => counterLimit[14].CLK
CLK => counterLimit[15].CLK
CLK => counterLimit[16].CLK
CLK => counterLimit[17].CLK
CLK => counterLimit[18].CLK
CLK => counterLimit[19].CLK
CLK => counterLimit[20].CLK
CLK => counterLimit[21].CLK
CLK => counterLimit[22].CLK
CLK => counterLimit[23].CLK
CLK => counterLimit[24].CLK
CLK => counterLimit[25].CLK
CLK => counterLimit[26].CLK
CLK => counterLimit[27].CLK
CLK => counterLimit[28].CLK
CLK => counterLimit[29].CLK
CLK => counterLimit[30].CLK
CLK => counterLimit[31].CLK
CLK => quaterCounter[0].CLK
CLK => quaterCounter[1].CLK
CLK => quaterCounter[2].CLK
CLK => counter[0].CLK
CLK => counter[1].CLK
CLK => counter[2].CLK
CLK => counter[3].CLK
CLK => counter[4].CLK
CLK => counter[5].CLK
CLK => counter[6].CLK
CLK => counter[7].CLK
CLK => counter[8].CLK
CLK => counter[9].CLK
CLK => counter[10].CLK
CLK => counter[11].CLK
CLK => counter[12].CLK
CLK => counter[13].CLK
CLK => counter[14].CLK
CLK => counter[15].CLK
CLK => counter[16].CLK
CLK => counter[17].CLK
CLK => counter[18].CLK
CLK => counter[19].CLK
CLK => counter[20].CLK
CLK => counter[21].CLK
CLK => counter[22].CLK
CLK => counter[23].CLK
CLK => counter[24].CLK
CLK => counter[25].CLK
CLK => counter[26].CLK
CLK => counter[27].CLK
CLK => counter[28].CLK
CLK => counter[29].CLK
CLK => counter[30].CLK
CLK => counter[31].CLK
CLK => BPMcurr[0].CLK
CLK => BPMcurr[1].CLK
CLK => BPMcurr[2].CLK
CLK => BPMcurr[3].CLK
CLK => BPMcurr[4].CLK
CLK => BPMcurr[5].CLK
CLK => BPMcurr[6].CLK
CLK => BPMcurr[7].CLK
enable => arch_duty20ms.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => counterLimit.OUTPUTSELECT
enable => arch_dout.OUTPUTSELECT
enable => arch_barEND.OUTPUTSELECT
enable => BPMcurr[7].ENA
enable => BPMcurr[6].ENA
enable => BPMcurr[5].ENA
enable => BPMcurr[4].ENA
enable => BPMcurr[3].ENA
enable => BPMcurr[2].ENA
enable => BPMcurr[1].ENA
enable => BPMcurr[0].ENA
enable => counter[31].ENA
enable => counter[30].ENA
enable => counter[29].ENA
enable => counter[28].ENA
enable => counter[27].ENA
enable => counter[26].ENA
enable => counter[25].ENA
enable => counter[24].ENA
enable => counter[23].ENA
enable => counter[22].ENA
enable => counter[21].ENA
enable => counter[20].ENA
enable => counter[19].ENA
enable => counter[18].ENA
enable => counter[17].ENA
enable => counter[16].ENA
enable => counter[15].ENA
enable => counter[14].ENA
enable => counter[13].ENA
enable => counter[12].ENA
enable => counter[11].ENA
enable => counter[10].ENA
enable => counter[9].ENA
enable => counter[8].ENA
enable => counter[7].ENA
enable => counter[6].ENA
enable => counter[5].ENA
enable => counter[4].ENA
enable => counter[3].ENA
enable => counter[2].ENA
enable => counter[1].ENA
enable => counter[0].ENA
enable => quaterCounter[2].ENA
enable => quaterCounter[1].ENA
enable => quaterCounter[0].ENA
enable => arch_newBPM.ENA
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => counter.OUTPUTSELECT
resetCount => quaterCounter.OUTPUTSELECT
resetCount => quaterCounter.OUTPUTSELECT
resetCount => quaterCounter.OUTPUTSELECT
resetCount => arch_dout.OUTPUTSELECT
resetCount => arch_barEND.OUTPUTSELECT
inBPM[0] => Equal0.IN7
inBPM[0] => Mux0.IN263
inBPM[0] => Mux1.IN263
inBPM[0] => Mux2.IN263
inBPM[0] => Mux3.IN263
inBPM[0] => Mux4.IN263
inBPM[0] => Mux5.IN263
inBPM[0] => Mux6.IN263
inBPM[0] => Mux7.IN263
inBPM[0] => Mux8.IN263
inBPM[0] => Mux9.IN263
inBPM[0] => Mux10.IN263
inBPM[0] => Mux11.IN263
inBPM[0] => Mux12.IN263
inBPM[0] => Mux13.IN263
inBPM[0] => Mux14.IN263
inBPM[0] => Mux15.IN263
inBPM[0] => Mux16.IN263
inBPM[0] => Mux17.IN263
inBPM[0] => Mux18.IN263
inBPM[0] => Mux19.IN263
inBPM[0] => Mux20.IN263
inBPM[0] => Mux21.IN263
inBPM[0] => Mux22.IN263
inBPM[0] => Mux23.IN263
inBPM[0] => Mux24.IN263
inBPM[0] => Mux25.IN263
inBPM[0] => Mux26.IN263
inBPM[0] => Mux27.IN263
inBPM[0] => Mux28.IN263
inBPM[0] => Mux29.IN263
inBPM[0] => Mux30.IN263
inBPM[0] => Mux31.IN263
inBPM[0] => BPMcurr.DATAB
inBPM[1] => Equal0.IN6
inBPM[1] => Mux0.IN262
inBPM[1] => Mux1.IN262
inBPM[1] => Mux2.IN262
inBPM[1] => Mux3.IN262
inBPM[1] => Mux4.IN262
inBPM[1] => Mux5.IN262
inBPM[1] => Mux6.IN262
inBPM[1] => Mux7.IN262
inBPM[1] => Mux8.IN262
inBPM[1] => Mux9.IN262
inBPM[1] => Mux10.IN262
inBPM[1] => Mux11.IN262
inBPM[1] => Mux12.IN262
inBPM[1] => Mux13.IN262
inBPM[1] => Mux14.IN262
inBPM[1] => Mux15.IN262
inBPM[1] => Mux16.IN262
inBPM[1] => Mux17.IN262
inBPM[1] => Mux18.IN262
inBPM[1] => Mux19.IN262
inBPM[1] => Mux20.IN262
inBPM[1] => Mux21.IN262
inBPM[1] => Mux22.IN262
inBPM[1] => Mux23.IN262
inBPM[1] => Mux24.IN262
inBPM[1] => Mux25.IN262
inBPM[1] => Mux26.IN262
inBPM[1] => Mux27.IN262
inBPM[1] => Mux28.IN262
inBPM[1] => Mux29.IN262
inBPM[1] => Mux30.IN262
inBPM[1] => Mux31.IN262
inBPM[1] => BPMcurr.DATAB
inBPM[2] => Equal0.IN5
inBPM[2] => Mux0.IN261
inBPM[2] => Mux1.IN261
inBPM[2] => Mux2.IN261
inBPM[2] => Mux3.IN261
inBPM[2] => Mux4.IN261
inBPM[2] => Mux5.IN261
inBPM[2] => Mux6.IN261
inBPM[2] => Mux7.IN261
inBPM[2] => Mux8.IN261
inBPM[2] => Mux9.IN261
inBPM[2] => Mux10.IN261
inBPM[2] => Mux11.IN261
inBPM[2] => Mux12.IN261
inBPM[2] => Mux13.IN261
inBPM[2] => Mux14.IN261
inBPM[2] => Mux15.IN261
inBPM[2] => Mux16.IN261
inBPM[2] => Mux17.IN261
inBPM[2] => Mux18.IN261
inBPM[2] => Mux19.IN261
inBPM[2] => Mux20.IN261
inBPM[2] => Mux21.IN261
inBPM[2] => Mux22.IN261
inBPM[2] => Mux23.IN261
inBPM[2] => Mux24.IN261
inBPM[2] => Mux25.IN261
inBPM[2] => Mux26.IN261
inBPM[2] => Mux27.IN261
inBPM[2] => Mux28.IN261
inBPM[2] => Mux29.IN261
inBPM[2] => Mux30.IN261
inBPM[2] => Mux31.IN261
inBPM[2] => BPMcurr.DATAB
inBPM[3] => Equal0.IN4
inBPM[3] => Mux0.IN260
inBPM[3] => Mux1.IN260
inBPM[3] => Mux2.IN260
inBPM[3] => Mux3.IN260
inBPM[3] => Mux4.IN260
inBPM[3] => Mux5.IN260
inBPM[3] => Mux6.IN260
inBPM[3] => Mux7.IN260
inBPM[3] => Mux8.IN260
inBPM[3] => Mux9.IN260
inBPM[3] => Mux10.IN260
inBPM[3] => Mux11.IN260
inBPM[3] => Mux12.IN260
inBPM[3] => Mux13.IN260
inBPM[3] => Mux14.IN260
inBPM[3] => Mux15.IN260
inBPM[3] => Mux16.IN260
inBPM[3] => Mux17.IN260
inBPM[3] => Mux18.IN260
inBPM[3] => Mux19.IN260
inBPM[3] => Mux20.IN260
inBPM[3] => Mux21.IN260
inBPM[3] => Mux22.IN260
inBPM[3] => Mux23.IN260
inBPM[3] => Mux24.IN260
inBPM[3] => Mux25.IN260
inBPM[3] => Mux26.IN260
inBPM[3] => Mux27.IN260
inBPM[3] => Mux28.IN260
inBPM[3] => Mux29.IN260
inBPM[3] => Mux30.IN260
inBPM[3] => Mux31.IN260
inBPM[3] => BPMcurr.DATAB
inBPM[4] => Equal0.IN3
inBPM[4] => Mux0.IN259
inBPM[4] => Mux1.IN259
inBPM[4] => Mux2.IN259
inBPM[4] => Mux3.IN259
inBPM[4] => Mux4.IN259
inBPM[4] => Mux5.IN259
inBPM[4] => Mux6.IN259
inBPM[4] => Mux7.IN259
inBPM[4] => Mux8.IN259
inBPM[4] => Mux9.IN259
inBPM[4] => Mux10.IN259
inBPM[4] => Mux11.IN259
inBPM[4] => Mux12.IN259
inBPM[4] => Mux13.IN259
inBPM[4] => Mux14.IN259
inBPM[4] => Mux15.IN259
inBPM[4] => Mux16.IN259
inBPM[4] => Mux17.IN259
inBPM[4] => Mux18.IN259
inBPM[4] => Mux19.IN259
inBPM[4] => Mux20.IN259
inBPM[4] => Mux21.IN259
inBPM[4] => Mux22.IN259
inBPM[4] => Mux23.IN259
inBPM[4] => Mux24.IN259
inBPM[4] => Mux25.IN259
inBPM[4] => Mux26.IN259
inBPM[4] => Mux27.IN259
inBPM[4] => Mux28.IN259
inBPM[4] => Mux29.IN259
inBPM[4] => Mux30.IN259
inBPM[4] => Mux31.IN259
inBPM[4] => BPMcurr.DATAB
inBPM[5] => Equal0.IN2
inBPM[5] => Mux0.IN258
inBPM[5] => Mux1.IN258
inBPM[5] => Mux2.IN258
inBPM[5] => Mux3.IN258
inBPM[5] => Mux4.IN258
inBPM[5] => Mux5.IN258
inBPM[5] => Mux6.IN258
inBPM[5] => Mux7.IN258
inBPM[5] => Mux8.IN258
inBPM[5] => Mux9.IN258
inBPM[5] => Mux10.IN258
inBPM[5] => Mux11.IN258
inBPM[5] => Mux12.IN258
inBPM[5] => Mux13.IN258
inBPM[5] => Mux14.IN258
inBPM[5] => Mux15.IN258
inBPM[5] => Mux16.IN258
inBPM[5] => Mux17.IN258
inBPM[5] => Mux18.IN258
inBPM[5] => Mux19.IN258
inBPM[5] => Mux20.IN258
inBPM[5] => Mux21.IN258
inBPM[5] => Mux22.IN258
inBPM[5] => Mux23.IN258
inBPM[5] => Mux24.IN258
inBPM[5] => Mux25.IN258
inBPM[5] => Mux26.IN258
inBPM[5] => Mux27.IN258
inBPM[5] => Mux28.IN258
inBPM[5] => Mux29.IN258
inBPM[5] => Mux30.IN258
inBPM[5] => Mux31.IN258
inBPM[5] => BPMcurr.DATAB
inBPM[6] => Equal0.IN1
inBPM[6] => Mux0.IN257
inBPM[6] => Mux1.IN257
inBPM[6] => Mux2.IN257
inBPM[6] => Mux3.IN257
inBPM[6] => Mux4.IN257
inBPM[6] => Mux5.IN257
inBPM[6] => Mux6.IN257
inBPM[6] => Mux7.IN257
inBPM[6] => Mux8.IN257
inBPM[6] => Mux9.IN257
inBPM[6] => Mux10.IN257
inBPM[6] => Mux11.IN257
inBPM[6] => Mux12.IN257
inBPM[6] => Mux13.IN257
inBPM[6] => Mux14.IN257
inBPM[6] => Mux15.IN257
inBPM[6] => Mux16.IN257
inBPM[6] => Mux17.IN257
inBPM[6] => Mux18.IN257
inBPM[6] => Mux19.IN257
inBPM[6] => Mux20.IN257
inBPM[6] => Mux21.IN257
inBPM[6] => Mux22.IN257
inBPM[6] => Mux23.IN257
inBPM[6] => Mux24.IN257
inBPM[6] => Mux25.IN257
inBPM[6] => Mux26.IN257
inBPM[6] => Mux27.IN257
inBPM[6] => Mux28.IN257
inBPM[6] => Mux29.IN257
inBPM[6] => Mux30.IN257
inBPM[6] => Mux31.IN257
inBPM[6] => BPMcurr.DATAB
inBPM[7] => Equal0.IN0
inBPM[7] => Mux0.IN256
inBPM[7] => Mux1.IN256
inBPM[7] => Mux2.IN256
inBPM[7] => Mux3.IN256
inBPM[7] => Mux4.IN256
inBPM[7] => Mux5.IN256
inBPM[7] => Mux6.IN256
inBPM[7] => Mux7.IN256
inBPM[7] => Mux8.IN256
inBPM[7] => Mux9.IN256
inBPM[7] => Mux10.IN256
inBPM[7] => Mux11.IN256
inBPM[7] => Mux12.IN256
inBPM[7] => Mux13.IN256
inBPM[7] => Mux14.IN256
inBPM[7] => Mux15.IN256
inBPM[7] => Mux16.IN256
inBPM[7] => Mux17.IN256
inBPM[7] => Mux18.IN256
inBPM[7] => Mux19.IN256
inBPM[7] => Mux20.IN256
inBPM[7] => Mux21.IN256
inBPM[7] => Mux22.IN256
inBPM[7] => Mux23.IN256
inBPM[7] => Mux24.IN256
inBPM[7] => Mux25.IN256
inBPM[7] => Mux26.IN256
inBPM[7] => Mux27.IN256
inBPM[7] => Mux28.IN256
inBPM[7] => Mux29.IN256
inBPM[7] => Mux30.IN256
inBPM[7] => Mux31.IN256
inBPM[7] => BPMcurr.DATAB
duty20ms <= arch_duty20ms.DB_MAX_OUTPUT_PORT_TYPE
quater <= arch_dout.DB_MAX_OUTPUT_PORT_TYPE
barEND <= arch_barEND.DB_MAX_OUTPUT_PORT_TYPE
newBPM <= arch_newBPM.DB_MAX_OUTPUT_PORT_TYPE


|Met_Top|KBD_MOD_met:inst2
on/off <= on.DB_MAX_OUTPUT_PORT_TYPE
RESET => KEY_NOTE_2:inst.resetN
RESET => setting:inst1.resetN
RESET => KEY_NOTE:A.resetN
RESET => KEY_NOTE:Gm.resetN
CLK => KEY_NOTE_2:inst.clk
CLK => setting:inst1.clk
CLK => KEY_NOTE:A.clk
CLK => KEY_NOTE:Gm.clk
KBD_CLK => KEY_NOTE_2:inst.KBD_CLK
KBD_CLK => KEY_NOTE:A.KBD_CLK
KBD_CLK => KEY_NOTE:Gm.KBD_CLK
KBD_DAT => KEY_NOTE_2:inst.KBD_DAT
KBD_DAT => KEY_NOTE:A.KBD_DAT
KBD_DAT => KEY_NOTE:Gm.KBD_DAT
met_value[0] <= setting:inst1.dout[0]
met_value[1] <= setting:inst1.dout[1]
met_value[2] <= setting:inst1.dout[2]
met_value[3] <= setting:inst1.dout[3]
met_value[4] <= setting:inst1.dout[4]
met_value[5] <= setting:inst1.dout[5]
met_value[6] <= setting:inst1.dout[6]
met_value[7] <= setting:inst1.dout[7]


|Met_Top|KBD_MOD_met:inst2|KEY_NOTE_2:inst
PRESSED <= KEY_2:inst.dout
resetN => KEY_2:inst.resetN
resetN => byterec:inst3.resetN
resetN => bitrec:inst2.resetN
resetN => lpf:cleaner.resetN
clk => KEY_2:inst.clk
clk => byterec:inst3.clk
clk => bitrec:inst2.clk
clk => lpf:cleaner.clk
KBD_CLK => lpf:cleaner.din
KBD_DAT => bitrec:inst2.kbd_dat
KEY_CODE[0] => KEY_2:inst.KEY_CODE[0]
KEY_CODE[1] => KEY_2:inst.KEY_CODE[1]
KEY_CODE[2] => KEY_2:inst.KEY_CODE[2]
KEY_CODE[3] => KEY_2:inst.KEY_CODE[3]
KEY_CODE[4] => KEY_2:inst.KEY_CODE[4]
KEY_CODE[5] => KEY_2:inst.KEY_CODE[5]
KEY_CODE[6] => KEY_2:inst.KEY_CODE[6]
KEY_CODE[7] => KEY_2:inst.KEY_CODE[7]


|Met_Top|KBD_MOD_met:inst2|KEY_NOTE_2:inst|KEY_2:inst
resetN => pressed.ACLR
resetN => out_X.ACLR
clk => pressed.CLK
clk => out_X.CLK
din[0] => Equal0.IN7
din[1] => Equal0.IN6
din[2] => Equal0.IN5
din[3] => Equal0.IN4
din[4] => Equal0.IN3
din[5] => Equal0.IN2
din[6] => Equal0.IN1
din[7] => Equal0.IN0
din[8] => ~NO_FANOUT~
KEY_CODE[0] => Equal0.IN15
KEY_CODE[1] => Equal0.IN14
KEY_CODE[2] => Equal0.IN13
KEY_CODE[3] => Equal0.IN12
KEY_CODE[4] => Equal0.IN11
KEY_CODE[5] => Equal0.IN10
KEY_CODE[6] => Equal0.IN9
KEY_CODE[7] => Equal0.IN8
make => process_0.IN1
break => process_0.IN1
dout <= out_X.DB_MAX_OUTPUT_PORT_TYPE


|Met_Top|KBD_MOD_met:inst2|KEY_NOTE_2:inst|byterec:inst3
resetN => dout[0]~reg0.ACLR
resetN => dout[1]~reg0.ACLR
resetN => dout[2]~reg0.ACLR
resetN => dout[3]~reg0.ACLR
resetN => dout[4]~reg0.ACLR
resetN => dout[5]~reg0.ACLR
resetN => dout[6]~reg0.ACLR
resetN => dout[7]~reg0.ACLR
resetN => dout[8]~reg0.ACLR
resetN => present_state~3.DATAIN
clk => dout[0]~reg0.CLK
clk => dout[1]~reg0.CLK
clk => dout[2]~reg0.CLK
clk => dout[3]~reg0.CLK
clk => dout[4]~reg0.CLK
clk => dout[5]~reg0.CLK
clk => dout[6]~reg0.CLK
clk => dout[7]~reg0.CLK
clk => dout[8]~reg0.CLK
clk => present_state~1.DATAIN
din_new => next_state.OUTPUTSELECT
din_new => next_state.OUTPUTSELECT
din_new => next_state.OUTPUTSELECT
din_new => next_state.OUTPUTSELECT
din_new => next_state.OUTPUTSELECT
din_new => next_state.OUTPUTSELECT
din_new => Selector1.IN2
din_new => Selector2.IN2
din_new => Selector3.IN2
din[0] => LessThan0.IN16
din[0] => LessThan1.IN16
din[0] => Equal0.IN15
din[0] => Equal1.IN15
din[0] => dout[0]~reg0.DATAIN
din[1] => LessThan0.IN15
din[1] => LessThan1.IN15
din[1] => Equal0.IN14
din[1] => Equal1.IN14
din[1] => dout[1]~reg0.DATAIN
din[2] => LessThan0.IN14
din[2] => LessThan1.IN14
din[2] => Equal0.IN13
din[2] => Equal1.IN13
din[2] => dout[2]~reg0.DATAIN
din[3] => LessThan0.IN13
din[3] => LessThan1.IN13
din[3] => Equal0.IN12
din[3] => Equal1.IN12
din[3] => dout[3]~reg0.DATAIN
din[4] => LessThan0.IN12
din[4] => LessThan1.IN12
din[4] => Equal0.IN11
din[4] => Equal1.IN11
din[4] => dout[4]~reg0.DATAIN
din[5] => LessThan0.IN11
din[5] => LessThan1.IN11
din[5] => Equal0.IN10
din[5] => Equal1.IN10
din[5] => dout[5]~reg0.DATAIN
din[6] => LessThan0.IN10
din[6] => LessThan1.IN10
din[6] => Equal0.IN9
din[6] => Equal1.IN9
din[6] => dout[6]~reg0.DATAIN
din[7] => LessThan0.IN9
din[7] => LessThan1.IN9
din[7] => Equal0.IN8
din[7] => Equal1.IN8
din[7] => dout[7]~reg0.DATAIN
make <= make.DB_MAX_OUTPUT_PORT_TYPE
break <= break.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[8] <= dout[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Met_Top|KBD_MOD_met:inst2|KEY_NOTE_2:inst|bitrec:inst2
resetN => dout[0]~reg0.ACLR
resetN => dout[1]~reg0.ACLR
resetN => dout[2]~reg0.ACLR
resetN => dout[3]~reg0.ACLR
resetN => dout[4]~reg0.ACLR
resetN => dout[5]~reg0.ACLR
resetN => dout[6]~reg0.ACLR
resetN => dout[7]~reg0.ACLR
resetN => dout_new~reg0.ACLR
resetN => count[0].ACLR
resetN => count[1].ACLR
resetN => count[2].ACLR
resetN => count[3].ACLR
resetN => present_state~8.DATAIN
resetN => shift_reg[0].ENA
resetN => shift_reg[9].ENA
resetN => shift_reg[8].ENA
resetN => shift_reg[7].ENA
resetN => shift_reg[6].ENA
resetN => shift_reg[5].ENA
resetN => shift_reg[4].ENA
resetN => shift_reg[3].ENA
resetN => shift_reg[2].ENA
resetN => shift_reg[1].ENA
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => shift_reg[8].CLK
clk => shift_reg[9].CLK
clk => dout[0]~reg0.CLK
clk => dout[1]~reg0.CLK
clk => dout[2]~reg0.CLK
clk => dout[3]~reg0.CLK
clk => dout[4]~reg0.CLK
clk => dout[5]~reg0.CLK
clk => dout[6]~reg0.CLK
clk => dout[7]~reg0.CLK
clk => dout_new~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => present_state~6.DATAIN
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => count.OUTPUTSELECT
kbd_clk => count.OUTPUTSELECT
kbd_clk => count.OUTPUTSELECT
kbd_clk => count.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_dat => shift_reg.DATAB
kbd_dat => present_state.OUTPUTSELECT
kbd_dat => present_state.OUTPUTSELECT
kbd_dat => present_state.OUTPUTSELECT
kbd_dat => present_state.OUTPUTSELECT
kbd_dat => present_state.OUTPUTSELECT
dout_new <= dout_new~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Met_Top|KBD_MOD_met:inst2|KEY_NOTE_2:inst|lpf:cleaner
resetN => shiftreg[0].ACLR
resetN => shiftreg[1].ACLR
resetN => shiftreg[2].ACLR
resetN => shiftreg[3].ACLR
resetN => dout~reg0.ACLR
clk => dout~reg0.CLK
clk => shiftreg[0].CLK
clk => shiftreg[1].CLK
clk => shiftreg[2].CLK
clk => shiftreg[3].CLK
din => shiftreg[0].DATAIN
dout <= dout~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Met_Top|KBD_MOD_met:inst2|LPM_CONSTANT:inst3
result[0] <= <GND>
result[1] <= <VCC>
result[2] <= <GND>
result[3] <= <VCC>
result[4] <= <VCC>
result[5] <= <VCC>
result[6] <= <VCC>
result[7] <= <GND>


|Met_Top|KBD_MOD_met:inst2|setting:inst1
resetN => counter[0].ACLR
resetN => counter[1].ACLR
resetN => counter[2].PRESET
resetN => counter[3].PRESET
resetN => counter[4].PRESET
resetN => counter[5].PRESET
resetN => counter[6].ACLR
resetN => counter[7].ACLR
resetN => counter[8].ACLR
resetN => counter[9].ACLR
resetN => counter[10].ACLR
resetN => counter[11].ACLR
resetN => counter[12].ACLR
resetN => counter[13].ACLR
resetN => counter[14].ACLR
resetN => counter[15].ACLR
resetN => counter[16].ACLR
resetN => counter[17].ACLR
resetN => counter[18].ACLR
resetN => counter[19].ACLR
resetN => counter[20].ACLR
resetN => counter[21].ACLR
resetN => counter[22].ACLR
resetN => counter[23].ACLR
resetN => counter[24].ACLR
resetN => counter[25].ACLR
resetN => counter[26].ACLR
resetN => counter[27].ACLR
resetN => counter[28].ACLR
resetN => counter[29].ACLR
resetN => counter[30].ACLR
resetN => counter[31].ACLR
resetN => arch_counter[0].ENA
resetN => arch_counter[7].ENA
resetN => arch_counter[6].ENA
resetN => arch_counter[5].ENA
resetN => arch_counter[4].ENA
resetN => arch_counter[3].ENA
resetN => arch_counter[2].ENA
resetN => arch_counter[1].ENA
clk => arch_counter[0].CLK
clk => arch_counter[1].CLK
clk => arch_counter[2].CLK
clk => arch_counter[3].CLK
clk => arch_counter[4].CLK
clk => arch_counter[5].CLK
clk => arch_counter[6].CLK
clk => arch_counter[7].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
up => process_0.IN1
down => process_0.IN1
dout[0] <= arch_counter[0].DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= arch_counter[1].DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= arch_counter[2].DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= arch_counter[3].DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= arch_counter[4].DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= arch_counter[5].DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= arch_counter[6].DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= arch_counter[7].DB_MAX_OUTPUT_PORT_TYPE


|Met_Top|KBD_MOD_met:inst2|KEY_NOTE:A
PRESSED <= KEY_MET:inst.dout
resetN => KEY_MET:inst.resetN
resetN => byterec:inst3.resetN
resetN => bitrec:inst2.resetN
resetN => lpf:cleaner.resetN
clk => KEY_MET:inst.clk
clk => byterec:inst3.clk
clk => bitrec:inst2.clk
clk => lpf:cleaner.clk
KBD_CLK => lpf:cleaner.din
KBD_DAT => bitrec:inst2.kbd_dat
KEY_CODE[0] => KEY_MET:inst.KEY_CODE[0]
KEY_CODE[1] => KEY_MET:inst.KEY_CODE[1]
KEY_CODE[2] => KEY_MET:inst.KEY_CODE[2]
KEY_CODE[3] => KEY_MET:inst.KEY_CODE[3]
KEY_CODE[4] => KEY_MET:inst.KEY_CODE[4]
KEY_CODE[5] => KEY_MET:inst.KEY_CODE[5]
KEY_CODE[6] => KEY_MET:inst.KEY_CODE[6]
KEY_CODE[7] => KEY_MET:inst.KEY_CODE[7]


|Met_Top|KBD_MOD_met:inst2|KEY_NOTE:A|KEY_MET:inst
resetN => out_X.ACLR
clk => out_X.CLK
din[0] => Equal0.IN7
din[1] => Equal0.IN6
din[2] => Equal0.IN5
din[3] => Equal0.IN4
din[4] => Equal0.IN3
din[5] => Equal0.IN2
din[6] => Equal0.IN1
din[7] => Equal0.IN0
din[8] => ~NO_FANOUT~
KEY_CODE[0] => Equal0.IN15
KEY_CODE[1] => Equal0.IN14
KEY_CODE[2] => Equal0.IN13
KEY_CODE[3] => Equal0.IN12
KEY_CODE[4] => Equal0.IN11
KEY_CODE[5] => Equal0.IN10
KEY_CODE[6] => Equal0.IN9
KEY_CODE[7] => Equal0.IN8
make => process_0.IN1
break => ~NO_FANOUT~
dout <= out_X.DB_MAX_OUTPUT_PORT_TYPE


|Met_Top|KBD_MOD_met:inst2|KEY_NOTE:A|byterec:inst3
resetN => dout[0]~reg0.ACLR
resetN => dout[1]~reg0.ACLR
resetN => dout[2]~reg0.ACLR
resetN => dout[3]~reg0.ACLR
resetN => dout[4]~reg0.ACLR
resetN => dout[5]~reg0.ACLR
resetN => dout[6]~reg0.ACLR
resetN => dout[7]~reg0.ACLR
resetN => dout[8]~reg0.ACLR
resetN => present_state~3.DATAIN
clk => dout[0]~reg0.CLK
clk => dout[1]~reg0.CLK
clk => dout[2]~reg0.CLK
clk => dout[3]~reg0.CLK
clk => dout[4]~reg0.CLK
clk => dout[5]~reg0.CLK
clk => dout[6]~reg0.CLK
clk => dout[7]~reg0.CLK
clk => dout[8]~reg0.CLK
clk => present_state~1.DATAIN
din_new => next_state.OUTPUTSELECT
din_new => next_state.OUTPUTSELECT
din_new => next_state.OUTPUTSELECT
din_new => next_state.OUTPUTSELECT
din_new => next_state.OUTPUTSELECT
din_new => next_state.OUTPUTSELECT
din_new => Selector1.IN2
din_new => Selector2.IN2
din_new => Selector3.IN2
din[0] => LessThan0.IN16
din[0] => LessThan1.IN16
din[0] => Equal0.IN15
din[0] => Equal1.IN15
din[0] => dout[0]~reg0.DATAIN
din[1] => LessThan0.IN15
din[1] => LessThan1.IN15
din[1] => Equal0.IN14
din[1] => Equal1.IN14
din[1] => dout[1]~reg0.DATAIN
din[2] => LessThan0.IN14
din[2] => LessThan1.IN14
din[2] => Equal0.IN13
din[2] => Equal1.IN13
din[2] => dout[2]~reg0.DATAIN
din[3] => LessThan0.IN13
din[3] => LessThan1.IN13
din[3] => Equal0.IN12
din[3] => Equal1.IN12
din[3] => dout[3]~reg0.DATAIN
din[4] => LessThan0.IN12
din[4] => LessThan1.IN12
din[4] => Equal0.IN11
din[4] => Equal1.IN11
din[4] => dout[4]~reg0.DATAIN
din[5] => LessThan0.IN11
din[5] => LessThan1.IN11
din[5] => Equal0.IN10
din[5] => Equal1.IN10
din[5] => dout[5]~reg0.DATAIN
din[6] => LessThan0.IN10
din[6] => LessThan1.IN10
din[6] => Equal0.IN9
din[6] => Equal1.IN9
din[6] => dout[6]~reg0.DATAIN
din[7] => LessThan0.IN9
din[7] => LessThan1.IN9
din[7] => Equal0.IN8
din[7] => Equal1.IN8
din[7] => dout[7]~reg0.DATAIN
make <= make.DB_MAX_OUTPUT_PORT_TYPE
break <= break.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[8] <= dout[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Met_Top|KBD_MOD_met:inst2|KEY_NOTE:A|bitrec:inst2
resetN => dout[0]~reg0.ACLR
resetN => dout[1]~reg0.ACLR
resetN => dout[2]~reg0.ACLR
resetN => dout[3]~reg0.ACLR
resetN => dout[4]~reg0.ACLR
resetN => dout[5]~reg0.ACLR
resetN => dout[6]~reg0.ACLR
resetN => dout[7]~reg0.ACLR
resetN => dout_new~reg0.ACLR
resetN => count[0].ACLR
resetN => count[1].ACLR
resetN => count[2].ACLR
resetN => count[3].ACLR
resetN => present_state~8.DATAIN
resetN => shift_reg[0].ENA
resetN => shift_reg[9].ENA
resetN => shift_reg[8].ENA
resetN => shift_reg[7].ENA
resetN => shift_reg[6].ENA
resetN => shift_reg[5].ENA
resetN => shift_reg[4].ENA
resetN => shift_reg[3].ENA
resetN => shift_reg[2].ENA
resetN => shift_reg[1].ENA
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => shift_reg[8].CLK
clk => shift_reg[9].CLK
clk => dout[0]~reg0.CLK
clk => dout[1]~reg0.CLK
clk => dout[2]~reg0.CLK
clk => dout[3]~reg0.CLK
clk => dout[4]~reg0.CLK
clk => dout[5]~reg0.CLK
clk => dout[6]~reg0.CLK
clk => dout[7]~reg0.CLK
clk => dout_new~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => present_state~6.DATAIN
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => count.OUTPUTSELECT
kbd_clk => count.OUTPUTSELECT
kbd_clk => count.OUTPUTSELECT
kbd_clk => count.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_dat => shift_reg.DATAB
kbd_dat => present_state.OUTPUTSELECT
kbd_dat => present_state.OUTPUTSELECT
kbd_dat => present_state.OUTPUTSELECT
kbd_dat => present_state.OUTPUTSELECT
kbd_dat => present_state.OUTPUTSELECT
dout_new <= dout_new~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Met_Top|KBD_MOD_met:inst2|KEY_NOTE:A|lpf:cleaner
resetN => shiftreg[0].ACLR
resetN => shiftreg[1].ACLR
resetN => shiftreg[2].ACLR
resetN => shiftreg[3].ACLR
resetN => dout~reg0.ACLR
clk => dout~reg0.CLK
clk => shiftreg[0].CLK
clk => shiftreg[1].CLK
clk => shiftreg[2].CLK
clk => shiftreg[3].CLK
din => shiftreg[0].DATAIN
dout <= dout~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Met_Top|KBD_MOD_met:inst2|LPM_CONSTANT:inst5
result[0] <= <GND>
result[1] <= <VCC>
result[2] <= <GND>
result[3] <= <GND>
result[4] <= <VCC>
result[5] <= <VCC>
result[6] <= <VCC>
result[7] <= <GND>


|Met_Top|KBD_MOD_met:inst2|KEY_NOTE:Gm
PRESSED <= KEY_MET:inst.dout
resetN => KEY_MET:inst.resetN
resetN => byterec:inst3.resetN
resetN => bitrec:inst2.resetN
resetN => lpf:cleaner.resetN
clk => KEY_MET:inst.clk
clk => byterec:inst3.clk
clk => bitrec:inst2.clk
clk => lpf:cleaner.clk
KBD_CLK => lpf:cleaner.din
KBD_DAT => bitrec:inst2.kbd_dat
KEY_CODE[0] => KEY_MET:inst.KEY_CODE[0]
KEY_CODE[1] => KEY_MET:inst.KEY_CODE[1]
KEY_CODE[2] => KEY_MET:inst.KEY_CODE[2]
KEY_CODE[3] => KEY_MET:inst.KEY_CODE[3]
KEY_CODE[4] => KEY_MET:inst.KEY_CODE[4]
KEY_CODE[5] => KEY_MET:inst.KEY_CODE[5]
KEY_CODE[6] => KEY_MET:inst.KEY_CODE[6]
KEY_CODE[7] => KEY_MET:inst.KEY_CODE[7]


|Met_Top|KBD_MOD_met:inst2|KEY_NOTE:Gm|KEY_MET:inst
resetN => out_X.ACLR
clk => out_X.CLK
din[0] => Equal0.IN7
din[1] => Equal0.IN6
din[2] => Equal0.IN5
din[3] => Equal0.IN4
din[4] => Equal0.IN3
din[5] => Equal0.IN2
din[6] => Equal0.IN1
din[7] => Equal0.IN0
din[8] => ~NO_FANOUT~
KEY_CODE[0] => Equal0.IN15
KEY_CODE[1] => Equal0.IN14
KEY_CODE[2] => Equal0.IN13
KEY_CODE[3] => Equal0.IN12
KEY_CODE[4] => Equal0.IN11
KEY_CODE[5] => Equal0.IN10
KEY_CODE[6] => Equal0.IN9
KEY_CODE[7] => Equal0.IN8
make => process_0.IN1
break => ~NO_FANOUT~
dout <= out_X.DB_MAX_OUTPUT_PORT_TYPE


|Met_Top|KBD_MOD_met:inst2|KEY_NOTE:Gm|byterec:inst3
resetN => dout[0]~reg0.ACLR
resetN => dout[1]~reg0.ACLR
resetN => dout[2]~reg0.ACLR
resetN => dout[3]~reg0.ACLR
resetN => dout[4]~reg0.ACLR
resetN => dout[5]~reg0.ACLR
resetN => dout[6]~reg0.ACLR
resetN => dout[7]~reg0.ACLR
resetN => dout[8]~reg0.ACLR
resetN => present_state~3.DATAIN
clk => dout[0]~reg0.CLK
clk => dout[1]~reg0.CLK
clk => dout[2]~reg0.CLK
clk => dout[3]~reg0.CLK
clk => dout[4]~reg0.CLK
clk => dout[5]~reg0.CLK
clk => dout[6]~reg0.CLK
clk => dout[7]~reg0.CLK
clk => dout[8]~reg0.CLK
clk => present_state~1.DATAIN
din_new => next_state.OUTPUTSELECT
din_new => next_state.OUTPUTSELECT
din_new => next_state.OUTPUTSELECT
din_new => next_state.OUTPUTSELECT
din_new => next_state.OUTPUTSELECT
din_new => next_state.OUTPUTSELECT
din_new => Selector1.IN2
din_new => Selector2.IN2
din_new => Selector3.IN2
din[0] => LessThan0.IN16
din[0] => LessThan1.IN16
din[0] => Equal0.IN15
din[0] => Equal1.IN15
din[0] => dout[0]~reg0.DATAIN
din[1] => LessThan0.IN15
din[1] => LessThan1.IN15
din[1] => Equal0.IN14
din[1] => Equal1.IN14
din[1] => dout[1]~reg0.DATAIN
din[2] => LessThan0.IN14
din[2] => LessThan1.IN14
din[2] => Equal0.IN13
din[2] => Equal1.IN13
din[2] => dout[2]~reg0.DATAIN
din[3] => LessThan0.IN13
din[3] => LessThan1.IN13
din[3] => Equal0.IN12
din[3] => Equal1.IN12
din[3] => dout[3]~reg0.DATAIN
din[4] => LessThan0.IN12
din[4] => LessThan1.IN12
din[4] => Equal0.IN11
din[4] => Equal1.IN11
din[4] => dout[4]~reg0.DATAIN
din[5] => LessThan0.IN11
din[5] => LessThan1.IN11
din[5] => Equal0.IN10
din[5] => Equal1.IN10
din[5] => dout[5]~reg0.DATAIN
din[6] => LessThan0.IN10
din[6] => LessThan1.IN10
din[6] => Equal0.IN9
din[6] => Equal1.IN9
din[6] => dout[6]~reg0.DATAIN
din[7] => LessThan0.IN9
din[7] => LessThan1.IN9
din[7] => Equal0.IN8
din[7] => Equal1.IN8
din[7] => dout[7]~reg0.DATAIN
make <= make.DB_MAX_OUTPUT_PORT_TYPE
break <= break.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[8] <= dout[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Met_Top|KBD_MOD_met:inst2|KEY_NOTE:Gm|bitrec:inst2
resetN => dout[0]~reg0.ACLR
resetN => dout[1]~reg0.ACLR
resetN => dout[2]~reg0.ACLR
resetN => dout[3]~reg0.ACLR
resetN => dout[4]~reg0.ACLR
resetN => dout[5]~reg0.ACLR
resetN => dout[6]~reg0.ACLR
resetN => dout[7]~reg0.ACLR
resetN => dout_new~reg0.ACLR
resetN => count[0].ACLR
resetN => count[1].ACLR
resetN => count[2].ACLR
resetN => count[3].ACLR
resetN => present_state~8.DATAIN
resetN => shift_reg[0].ENA
resetN => shift_reg[9].ENA
resetN => shift_reg[8].ENA
resetN => shift_reg[7].ENA
resetN => shift_reg[6].ENA
resetN => shift_reg[5].ENA
resetN => shift_reg[4].ENA
resetN => shift_reg[3].ENA
resetN => shift_reg[2].ENA
resetN => shift_reg[1].ENA
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => shift_reg[8].CLK
clk => shift_reg[9].CLK
clk => dout[0]~reg0.CLK
clk => dout[1]~reg0.CLK
clk => dout[2]~reg0.CLK
clk => dout[3]~reg0.CLK
clk => dout[4]~reg0.CLK
clk => dout[5]~reg0.CLK
clk => dout[6]~reg0.CLK
clk => dout[7]~reg0.CLK
clk => dout_new~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => present_state~6.DATAIN
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => shift_reg.OUTPUTSELECT
kbd_clk => count.OUTPUTSELECT
kbd_clk => count.OUTPUTSELECT
kbd_clk => count.OUTPUTSELECT
kbd_clk => count.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_clk => present_state.OUTPUTSELECT
kbd_dat => shift_reg.DATAB
kbd_dat => present_state.OUTPUTSELECT
kbd_dat => present_state.OUTPUTSELECT
kbd_dat => present_state.OUTPUTSELECT
kbd_dat => present_state.OUTPUTSELECT
kbd_dat => present_state.OUTPUTSELECT
dout_new <= dout_new~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Met_Top|KBD_MOD_met:inst2|KEY_NOTE:Gm|lpf:cleaner
resetN => shiftreg[0].ACLR
resetN => shiftreg[1].ACLR
resetN => shiftreg[2].ACLR
resetN => shiftreg[3].ACLR
resetN => dout~reg0.ACLR
clk => dout~reg0.CLK
clk => shiftreg[0].CLK
clk => shiftreg[1].CLK
clk => shiftreg[2].CLK
clk => shiftreg[3].CLK
din => shiftreg[0].DATAIN
dout <= dout~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Met_Top|KBD_MOD_met:inst2|LPM_CONSTANT:2456754
result[0] <= <VCC>
result[1] <= <GND>
result[2] <= <GND>
result[3] <= <VCC>
result[4] <= <GND>
result[5] <= <VCC>
result[6] <= <VCC>
result[7] <= <GND>


|Met_Top|hexss:inst1
din[0] => Mux0.IN19
din[0] => Mux1.IN19
din[0] => Mux2.IN19
din[0] => Mux3.IN19
din[0] => Mux4.IN19
din[0] => Mux5.IN19
din[0] => Mux6.IN19
din[1] => Mux0.IN18
din[1] => Mux1.IN18
din[1] => Mux2.IN18
din[1] => Mux3.IN18
din[1] => Mux4.IN18
din[1] => Mux5.IN18
din[1] => Mux6.IN18
din[2] => Mux0.IN17
din[2] => Mux1.IN17
din[2] => Mux2.IN17
din[2] => Mux3.IN17
din[2] => Mux4.IN17
din[2] => Mux5.IN17
din[2] => Mux6.IN17
din[3] => Mux0.IN16
din[3] => Mux1.IN16
din[3] => Mux2.IN16
din[3] => Mux3.IN16
din[3] => Mux4.IN16
din[3] => Mux5.IN16
din[3] => Mux6.IN16
blinkN => ss[0]$latch.LATCH_ENABLE
blinkN => ss[1]$latch.LATCH_ENABLE
blinkN => ss[2]$latch.LATCH_ENABLE
blinkN => ss[3]$latch.LATCH_ENABLE
blinkN => ss[4]$latch.LATCH_ENABLE
blinkN => ss[5]$latch.LATCH_ENABLE
blinkN => ss[6]$latch.LATCH_ENABLE
LAMP_TEST => ss[0]$latch.ACLR
LAMP_TEST => ss[1]$latch.ACLR
LAMP_TEST => ss[2]$latch.ACLR
LAMP_TEST => ss[3]$latch.ACLR
LAMP_TEST => ss[4]$latch.ACLR
LAMP_TEST => ss[5]$latch.ACLR
LAMP_TEST => ss[6]$latch.ACLR
ss[0] <= ss[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
ss[1] <= ss[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
ss[2] <= ss[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
ss[3] <= ss[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
ss[4] <= ss[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
ss[5] <= ss[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
ss[6] <= ss[6]$latch.DB_MAX_OUTPUT_PORT_TYPE


|Met_Top|LPM_CONSTANT:inst20
result[0] <= <VCC>


|Met_Top|hexss:inst3
din[0] => Mux0.IN19
din[0] => Mux1.IN19
din[0] => Mux2.IN19
din[0] => Mux3.IN19
din[0] => Mux4.IN19
din[0] => Mux5.IN19
din[0] => Mux6.IN19
din[1] => Mux0.IN18
din[1] => Mux1.IN18
din[1] => Mux2.IN18
din[1] => Mux3.IN18
din[1] => Mux4.IN18
din[1] => Mux5.IN18
din[1] => Mux6.IN18
din[2] => Mux0.IN17
din[2] => Mux1.IN17
din[2] => Mux2.IN17
din[2] => Mux3.IN17
din[2] => Mux4.IN17
din[2] => Mux5.IN17
din[2] => Mux6.IN17
din[3] => Mux0.IN16
din[3] => Mux1.IN16
din[3] => Mux2.IN16
din[3] => Mux3.IN16
din[3] => Mux4.IN16
din[3] => Mux5.IN16
din[3] => Mux6.IN16
blinkN => ss[0]$latch.LATCH_ENABLE
blinkN => ss[1]$latch.LATCH_ENABLE
blinkN => ss[2]$latch.LATCH_ENABLE
blinkN => ss[3]$latch.LATCH_ENABLE
blinkN => ss[4]$latch.LATCH_ENABLE
blinkN => ss[5]$latch.LATCH_ENABLE
blinkN => ss[6]$latch.LATCH_ENABLE
LAMP_TEST => ss[0]$latch.ACLR
LAMP_TEST => ss[1]$latch.ACLR
LAMP_TEST => ss[2]$latch.ACLR
LAMP_TEST => ss[3]$latch.ACLR
LAMP_TEST => ss[4]$latch.ACLR
LAMP_TEST => ss[5]$latch.ACLR
LAMP_TEST => ss[6]$latch.ACLR
ss[0] <= ss[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
ss[1] <= ss[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
ss[2] <= ss[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
ss[3] <= ss[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
ss[4] <= ss[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
ss[5] <= ss[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
ss[6] <= ss[6]$latch.DB_MAX_OUTPUT_PORT_TYPE


